---
title: "00 Pre-class setup"
author: Grigorios Georgolopoulos
date: last-modified
theme: yeti
number-sections: true
format:
  html:
    code-fold: true
    toc: true
    toc-location: left
  pdf:
    code-fold: true
    toc: true
    toc-location: left
editor: visual
---

In this chapter you will learn how to setup your environment either on the remote server or locally.

**Learning objectives**

1. Creating a directory
2. Cloning a git repo with class material
3. Setting up a conda environment
4. Download data

# Setup working directory

## Login to AUTH cluster (Remote coding only)

Before setting up, there are some necessary steps specific for remote coding which are specific to Windows users. If you are a Linux os MacOS user skip to [section](#unix-linuxmacos-users)

### Install VSCode or MobaXTerm (Windows Users Only)

In order to use SSH (remote host access) to the AUTH computer cluster you will either need to have Windows Subprocesses for Linux [(WSL)](https://learn.microsoft.com/en-us/windows/wsl/install) installed and enabled or use and IDE such as [VSCode](https://code.visualstudio.com/) (preferable) or [MobaXTerm](https://mobaxterm.mobatek.net/)

### Connect to AUTH cluster

If you are not logged in an AUTH network (e.g. working from home), make sure you have eduVPN enabled. More info [here](https://it.auth.gr/manuals/eduvpn/)

Then open a terminal window or your IDE and type the following:

```bash
ssh [username]@aristotle.it.auth.gr
```

## Clone the git repo with the course material

```bash
git clone https://github.com/ggeorgol/ATACseq_course

cd ATACseq_course
```

# Creating a conda environment

There is an established set of tools required for analyzing high throughput sequencing data, and ATAC-seq in particular. For this reason we will create a virtual environment using the ANACONDA/miniconda (`conda` for short) package manager. 

Specifically, we are going to need the following tools:

* [htslib](http://www.htslib.org/)  See SAMtools
* [SAMtools](http://www.htslib.org/) The holy grail of HTS data processing. Your trusty hammer. An all-in-one kit for manipulating alignment files (BAM)
* [picard](https://broadinstitute.github.io/picard/) Next to SAMtools there is Picard. A set of Java command line tools for manipulating high-throughput sequencing (HTS) data and formats.
* [deepTools](https://deeptools.readthedocs.io/en/develop/) A suite of tools for expliring HTS data. Great for QC and visualization.
* [bedTools](https://bedtools.readthedocs.io/en/latest/) a swiss-army knife of tools for a wide-range of genomics analysis tasks and genome arithmetic
* [bedops](https://bedops.readthedocs.io/en/latest/) Similar to bedTools, BEDOPS is a fast, highly scalable and easily-parallelizable genome analysis toolkit
* [subread](https://subread.sourceforge.net/) A suite of software programs for processing next-gen sequencing read data with `featureCounts` being one of the most popular read counters.

The following snippet will take a few minutes to complete

```bash
module load gcc miniconda3
source $CONDA_PROFILE/conda.sh

conda config --add channels defaults
conda config --add channels bioconda
conda config --add channels conda-forge
conda config --set channel_priority strict

conda create -n atac python=3.10 htslib samtools picard deeptools bedtools bedops subread
```

To activate the environment type the following:

```bash
conda activate atac
```

# Data download

In this course we are going to work with ATAC-seq data generated by the [ENCODE project](https://www.encodeproject.org/matrix/?type=Experiment&control_type!=*&status=released&perturbed=false&assay_title=ATAC-seq). We will work with na√Øve and activated T-cells from a female adult with the following accession numbers: [ENCSR977LVI](https://www.encodeproject.org/experiments/ENCSR977LVI/), and [ENCSR558ZSN](https://www.encodeproject.org/experiments/ENCSR558ZSN/). We will use the alignment (BAM) files and the already generated peaks.

If you work on the AUTH cluster, the data should be stored in your personal scartch space `$SRCATCH`. Keep in mind that data in `$SCRATCH` will be stored for 30 days only before the scratch space is cleaned up.

If you work on the cluster, type:
```bash
DATADIR=${SCRATCH}/ATACseq_course/data
ln -s $DATADIR data # Make a data shortcut to your working directory
```

If your work locally, type:
```bash
DATADIR=data
```

Continue
```bash
mkdir -p data/{ENCSR977LVI,ENCSR558ZSN}

# Download ENCSR558ZSN dataset
# BAM files
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF287DFF/@@download/ENCFF287DFF.bam
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF218OSF/@@download/ENCFF218OSF.bam

# Peaks
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF002MKC/@@download/ENCFF002MKC.bed.gz
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF235RAD/@@download/ENCFF235RAD.bed.gz

# Download ENCSR558ZSN dataset
# BAM files
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF287DFF/@@download/ENCFF287DFF.bam
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF218OSF/@@download/ENCFF218OSF.bam

# Peaks
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF235RAD/@@download/ENCFF235RAD.bed.gz
wget -P data/ENCSR558ZSN https://www.encodeproject.org/files/ENCFF002MKC/@@download/ENCFF002MKC.bed.gz
```
